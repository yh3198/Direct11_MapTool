#pragma once
#include "BCore.h"
#include "MapExporter.h"
#include "MapImporter.h"

enum VertexControlerState
{
	vNone = 0,
	vUp,
	vDown,
	vParallel,
};

enum SpreatingState
{
	vSpreatNone = 0,
	vSpreatApply,
};

enum SpreatingColor
{
	vRed = 0,
	vGreen,
	vBlue,
	vAlpha,
};

class Sample : public BCore
{
public:
	/*MFC용 변수*/
	vector<BMapDesc*> m_vMFCMapInfo;
	vector<BMap*> m_vMFCMap;
	vector<BMapTileRender*> m_vMapQuadTree;
	vector<int> m_viClosedIndex;
	MapExporter m_Exporter;
	MapImporter m_Importer;

	vector<TCHAR*> m_vMapTexture;
	map<int, TCHAR*> m_mMapSplattingTexture;

	BMapTileRender* m_MapQuadTree;
	BMapDesc* m_MFCMapInfo;
	BMap* m_MFCMap;
	int m_VCtrlState; // 맵 높이조절 상태확인용 변수 
	int m_VSpreatState; // 맵 그리기 상태확인용 변수
	BSelect m_Select;
	float m_fRadius; // 마우스 피킹범위
	float m_fHeightValue;
	bool bParallel;
	float fParallel;
	// 스프레팅용 변수
	B_BOX SpreatingBox; // 스프레팅의 최대 최소범위uv값
	float m_fSpreatingRadius;
	int   m_iSpreatingColor;

	///////////////////////////*워터맵 전용 변수*/////////////////////////////////
	// 임시 라이트 ( 클래스화 예정 )
	D3DXVECTOR3	m_vInitLightPos;
	D3DXVECTOR3 m_LightPos;
	D3DXVECTOR3 m_vDirection;
	D3DXMATRIX	m_mLightWorld;

	/*Engine용*/
	BMapDesc* m_MFCWaterMapInfo;
	vector<BNMap*> m_vMFCWaterMap;
	vector<BWaterMap*> m_vWaterQuadTree;
	BNMap* m_MFCWaterMap;
	BWaterMap* m_WaterMapQuadTree;

	BMapTileRender* m_bSelectedMap; // 나중에 맵이 여러개 생성되었을 때 변경해주어야한다. 지금은 기본 생성된 0번맵을 넣어줄 것이다.
	int m_iSelectedMap;// 나중에 맵이 여러개 생성되었을 때 변경해주어야한다. 지금은 기본 생성된 0번맵을 넣어줄 것이다.

public:
	/*MFC용 함수*/
	bool CreateMap(int iCellCount, int iPatchCount, float fCellDistance, TCHAR** MapTexture, int TextureCount, TCHAR* HeightMapTex = NULL);
	bool CreateQuadTree(int iMaxDepthLimit, float fMinDivideSize, BMap* Map);
	bool MapHeightControl();
	D3DXVECTOR2 ChangeYPosition(D3DXVECTOR3 CPos, vector<PNCT_Vertex>* VertexList);
	D3DXVECTOR2 ChangeYParallel(D3DXVECTOR3 CPos, vector<PNCT_Vertex>* VertexList);

	bool MapSpreating(); // 스프레팅 함수
	bool GetSplattingTexName(int Color, TCHAR** Name);
	vector<TCHAR*> Text;

	bool MapExport();
	bool MapImport(TCHAR* ImportFile);

	/*워터맵용 함수*/
	bool CreateWaterMap(BMapTileRender* SelectedMap, int iMaxDepthLimit, float fMinDivideSize, int iSelectedMap, TCHAR* WaterTex, TCHAR* WaterNormalTex, float fHeight, float fWave);

public:
	bool		Init();
	bool		Frame();
	bool		Render();	
	bool		Release();

public:
	Sample();
	~Sample();
};

